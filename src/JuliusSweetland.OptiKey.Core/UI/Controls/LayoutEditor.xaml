<!--Copyright (c) 2022 OPTIKEY LTD (UK company number 11854839) - All Rights Reserved-->
<UserControl x:Class="JuliusSweetland.OptiKey.UI.Controls.LayoutEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:c="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controls="clr-namespace:JuliusSweetland.OptiKey.UI.Controls"
             xmlns:mgmt="clr-namespace:JuliusSweetland.OptiKey.UI.ViewModels.Management"
             xmlns:valueConverters="clr-namespace:JuliusSweetland.OptiKey.UI.ValueConverters"
             mc:Ignorable="d" Background="LightBlue">
  <UserControl.Resources>
    <valueConverters:InvertedBoolToVisibilityConverter x:Key="InvertedBoolToVisibilityConverter" />
    <valueConverters:ListNotEmpty x:Key="ListNotEmpty"/>
    <CollectionViewSource x:Key="PositionList" Source="{Binding Source={x:Static mgmt:LayoutViewModel.PositionList}}"/>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Expander Grid.Row="0" Header="Properties" IsExpanded="True">
      <StackPanel Orientation="Horizontal">
        <StackPanel>
          <Label Margin="1,0,1,0" Content="Name"/>
          <Label Margin="1,0,1,0" Content="Show Output Panel"/>
          <Label Margin="1,0,1,0" Content="Columns"/>
          <Label Margin="1,0,1,0" Content="Rows"/>
          <Label Margin="1,0,1,0" Content="Position"/>
          <Label Margin="1,0,1,0" Content="Width"/>
          <Label Margin="1,0,1,0" Content="Height"/>
          <Label Margin="1,0,1,0" Content="HorizontalOffset"/>
          <Label Margin="1,0,1,0" Content="VerticaOffset"/>
        </StackPanel>
        <StackPanel>
          <TextBox Margin="1,0,1,0" Text="{Binding XmlKeyboard.Name, UpdateSourceTrigger=PropertyChanged}"/>
          <CheckBox Margin="1,0,1,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                          IsChecked="{Binding XmlKeyboard.ShowOutputPanel, UpdateSourceTrigger=PropertyChanged}">
            <CheckBox.LayoutTransform>
              <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
            </CheckBox.LayoutTransform>
          </CheckBox>
          <c:NumericUpDown Margin="1,0,1,0" HorizontalContentAlignment="Left" Minimum="1"
                         Value="{Binding XmlKeyboard.Cols, UpdateSourceTrigger=PropertyChanged}" />
          <c:NumericUpDown Margin="1,0,1,0" HorizontalContentAlignment="Left" Minimum="1"
                         Value="{Binding XmlKeyboard.Rows, UpdateSourceTrigger=PropertyChanged}"/>
          <ComboBox Margin="1,0,1,0" ItemsSource="{Binding Source={StaticResource PositionList}}"
                    SelectedItem="{Binding XmlKeyboard.Position, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBox Margin="1,0,1,0" Text="{Binding XmlKeyboard.Width, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBox Margin="1,0,1,0" Text="{Binding XmlKeyboard.Height, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBox Margin="1,0,1,0" Text="{Binding XmlKeyboard.HorizontalOffset, UpdateSourceTrigger=PropertyChanged}"/>
          <TextBox Margin="1,0,1,0" Text="{Binding XmlKeyboard.VerticalOffset, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
      </StackPanel>
    </Expander>
    <Expander Grid.Row="1" Header="Keygroups" IsExpanded="True">
    <StackPanel Orientation="Horizontal">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding AddProfileCommand}" Content="Add"/>
            </Border>
            <Border Margin="5,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding DeleteProfileCommand}" Content="Delete"/>
            </Border>
          </StackPanel>
          <ListBox x:Name="XmlKeyboardProfileListBox" HorizontalAlignment="Left" Margin="5" MinWidth="120" MinHeight="160" BorderThickness="0"
                 ItemsSource="{Binding Profiles}"
                 SelectedItem="{Binding Profile}"
                 DisplayMemberPath="Name"/>
        </StackPanel>
        <Grid>
          <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Margin="1,0,1,0" Content="Name"/>
          <TextBox Grid.Column="1" Margin="1,0,1,0" Text="{Binding ElementName=XmlKeyboardProfileListBox, Path=SelectedItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
          <StackPanel Grid.Row="1" Grid.Column="0">
            <Label Margin="1,0,1,0" Content="BackgroundColor"/>
            <Label Margin="1,0,1,0" Content="BorderColor"/>
            <Label Margin="1,0,1,0" Content="ForegroundColor"/>
            <Label Margin="1,0,1,0" Content="Opacity"/>
            <Label Margin="1,0,1,0" Content="LockOnTime"/>
            <Label Margin="1,0,1,0" Content="CompletionTimes"/>
            <Label Margin="1,0,1,0" Content="TimeRequiredToLockDown"/>
          </StackPanel>
          <controls:ProfileEditor Grid.Row="1" Grid.Column="1" DataContext="{Binding Profile}"/>
        </Grid>
      </StackPanel>
    </Expander>
    <Expander Grid.Row="2" Header="Content" IsExpanded="True">
    <StackPanel Orientation="Horizontal">
        <StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,0,0,0" CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding AddInteractorCommand}"  Content="Add"/>
            </Border>
          </StackPanel>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Border Margin="5,5,5,0"  CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding CloneInteractorCommand}"  Content="Clone"/>
            </Border>
            <Border Margin="5,5,5,0"  CornerRadius="4" HorizontalAlignment="Center">
              <Button Width="48" Height="32" Command="{Binding DeleteInteractorCommand}"  Content="Delete"/>
            </Border>
          </StackPanel>
            <ListBox Grid.ColumnSpan="2" HorizontalAlignment="Left" Margin="5" MinWidth="120" MinHeight="200" MaxHeight="800" BorderThickness="0"
                     ItemsSource="{Binding Interactors}"
                     SelectedItem="{Binding Interactor}">
              <ListBox.ItemTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition SharedSizeGroup="ssg1"/>
                      <ColumnDefinition SharedSizeGroup="ssg1"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="1,0,1,0" Text="{Binding Label}"/>
                    <TextBlock Grid.Column="1" Margin="1,0,1,0" Text="{Binding Location}"/>
                  </Grid>
                </DataTemplate>
              </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
        <controls:InteractorEditor SelectedInteractorType="{Binding SelectedInteractorType, Mode=TwoWay}"/>
      </StackPanel>
    </Expander>
  </Grid>
</UserControl>
